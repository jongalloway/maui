parameters:
  msbuildExtraArguments : ''
  artifactsTargetFolder: '$(build.artifactstagingdirectory)'
  artifactsName: 'win_build'
  nunitTestFolder: '$(build.sourcesdirectory)'
  nunitTestAdapterFolder: 'packages/NUnitTestAdapter.AnyVersion/build/'

steps:
  - checkout: self
    clean: true

  - task: xamops.azdevex.provisionator-task.provisionator@1
    displayName: 'Provisionator'
    condition: eq(variables['provisioning'], 'true')
    inputs:
      provisioning_script: $(provisionator.path)
      provisioning_extra_args: $(provisionator.extraArguments)

  - powershell: |
      $(System.DefaultWorkingDirectory)/build.ps1 --target provision --TeamProject="$(System.TeamProject)"
    displayName: 'Cake Provision'
    condition: eq(variables['provisioningCake'], 'true')

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet $(NUGET_VERSION)'
    condition: ne(variables['NUGET_VERSION'], '')
    inputs:
      versionSpec: $(NUGET_VERSION)

  - task: CmdLine@2
    displayName: 'install NUnit3TestAdapter'
    inputs:
      script: 'nuget install NUnit3TestAdapter'

  - script: build.cmd -Target BuildForNuget -ScriptArgs '--BUILD_CONFIGURATION="$(BuildConfiguration)"','--Build_ArtifactStagingDirectory="$(Build.ArtifactStagingDirectory)"'
    name: winbuild
    displayName: 'Build Projects For Nuget'

  - task: VSTest@2
    displayName: 'XAML Unit Tests'
    continueOnError: true
    inputs:
      testAssemblyVer2: |
        **/bin/$(BuildConfiguration)/**/Microsoft.Maui.Controls.Xaml.UnitTests.dll
      searchFolder: ${{ parameters.nunitTestFolder }}
      codeCoverageEnabled: true
      testRunTitle: '$(BuildConfiguration)_UnitTests'
      configuration: '$(BuildConfiguration)'
      diagnosticsEnabled: true

  - task: DotNetCoreCLI@2
    displayName: 'Unit Tests'
    inputs:
      command: test
      projects: |
        **/Controls.Core.UnitTests.csproj
        **/Core.UnitTests.csproj
        **/Essentials.UnitTests.csproj
        **/Resizetizer.UnitTests.csproj
      arguments: '--configuration $(BuildConfiguration)'

  - task: CopyFiles@2
    displayName: 'Copy Files dlls'
    inputs:
      Contents: |
        **/bin/**/*.dll
      TargetFolder: ${{ parameters.artifactsTargetFolder }}
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ${{ parameters.artifactsName }}'
    condition: always()
    inputs:
      ArtifactName: ${{ parameters.artifactsName }}
